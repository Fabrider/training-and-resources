Glossary 2


Data Expedition
The Data Expedition is a training methodology developed by School Of Data[1], and they define it as:
Data Expeditions are quests to map uncharted territory, discover hidden stories and solve unsolved mysteries in the Land of Data. In a team you’ll tackle a problem, answer a question or work on a project. We help you to get started and it’s up to you to decide where you go…
The main goal is to develop a data-driven story, while at the same time training participants in the use of data tools. We will be using a modified version of the approach, tailored to your specific needs and goals.


API 
API stands for “Application Programming Interface”. An API is a way to access a data set programmatically.  


It’s best explained through an example. Many phones have weather applications, which use real-time weather data. 


The app is able to access that data in real time because the Met Office created a public open channel to access their data and created a set of rules and procedures so that others to know exactly what they can ask for. This means the weather app’s developers can work with weather data as if it lived in their databases, and create automated scripts that fetch data without manual intervention.


For advanced reading, here’s an example of a well-defined, well-documented API function - getting the list of Twitter followers from Twitter: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-followers-list


Scraping
Sometimes you will find data online that lives across different web pages, or can’t be downloaded in a simple file. This is where scraping comes in. Web scraping is a technique to collect the information you need from websites with the use of a programming language, such as Python, or with online tools such as Import.io. 


Web scraping, in essence, means creating a computer program that reads the information from a website, extracts that information and puts it into a usable format for you. 
Scraping, while useful, has moral issues. In fact, it is possible to scrape most data you find on the internet, which doesn’t mean it is legal or correct to do so.


Prototype
A prototype is, very simply, an unfinished version of a product that is still functional enough for testing whether certain aspects of it works. Each physical prototype needs to be constructed, milled and assembled. In software, we have the luxury of being able to test early and often, so developers constantly iterate on their designs to see whether a certain feature works or makes sense, or whether it can be improved. Another concept linked to the prototype is the MVP - a minimum viable product. This is usually the first milestone in software development, and it answers the following question: What is the least possible amount of work you need to do, in order to see whether your idea works or not? Getting the MVP definition just right is crucial, because it means very early validation of an idea (or, it lets you scrap a bad idea before you sink too much money in it).


Agile / iteration
The best way to explain the agile methodology is by looking at its opposite - the waterfall methodology (also known as the traditional approach). In waterfall, the product requirements are defined at the beginning, followed by development, testing, and deployment. 


However, there are situations in which the waterfall methodology risks massive failure: when requirements are difficult or impossible to know beforehand. This is where the agile methodology comes in: while still starting from basic requirements, those requirements are constantly tested and challenged during the development process (through extensive use of prototypes and MVPs). This makes development more fluid, and in the end it will produce a result that will be much closer to what users actually need. 


The agile methodology is the de facto standard of modern software development, but it has its drawbacks: the overheads are higher, and it requires extensive, constant collaboration with the client, or user/audience — an investment that not all can afford.
The agile methodology has also entered the grantmaking/donor world in the last five years, with mixed results. It is obviously a good match: development projects usually benefit from being able to pivot and re-adjust to shifting contexts. The issue comes with reporting and evaluating, and sticking to initial plans. Many international donor organisations are excited about the agile approach. However, often the reporting and funding flexibility needed for an agile proposal is hard to align with existing reporting structures and institutional requirements.
  
  
  
  



________________
[1] https://schoolofdata.org/data-expeditions/